version: '3.8'

services:
  postgres:
    image: 'postgres:latest'
    restart: always
    container_name: 'issuingbank'
    environment:
      - 'POSTGRES_DB=issuingbank'
      - 'POSTGRES_PASSWORD=lesson'
      - 'POSTGRES_USER=lesson'
    ports:
      - '5450:5432'
    volumes:
      - ./sql/create-schemas.sql:/docker-entrypoint-initdb.d/01_create_schemas.sql
      - ./issuingbank-data:/var/lib/postgresql/data


  redis:
    image: 'redis:latest'
    restart: always
    container_name: redis_cache_ib
    ports:
      - '6479:6379'

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin_ib
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8070:80"
    volumes:
      - pgadmin_data_ib:/var/lib/pgadmin  #чтобы сохранялись настройки

      # Добавляем Swagger UI
  swagger-ui:
        image: swaggerapi/swagger-ui
        restart: always
        container_name: issuingbank-swagger-ui
        ports:
          - "8075:8080"
        environment:
          # Указываем URL вашего OpenAPI-документа (JSON/YAML)
          # Если API запущено локально (не в Docker) — используйте host.docker.internal
          #SWAGGER_JSON: http://host.docker.internal:7050/v3/api-docs
          SWAGGER_JSON: http://host.docker.internal:8081/v3/api-docs
          # это путь к апи сервиса
          # ИЛИ если API в этом же compose-файле — укажите имя сервиса:
          # SWAGGER_JSON: http://ваш_сервис_апи:порт/v3/api-docs
          # чтобы Swagger не жаловался при отсутствии online-валидатора
          VALIDATOR_URL: "null"
        depends_on:
          - postgres  # Зависит от Postgres (если API зависит от БД)
volumes:
  pgadmin_data_ib: #в конце — обязательны для определения pgadmin_data